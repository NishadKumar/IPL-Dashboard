{"version":3,"sources":["components/MatchDetailsCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailsCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","latestMatches","team","setTeam","useParams","useEffect","fetchTeam","a","fetch","process","response","json","data","title","value","totalMatches","totalWins","color","slice","map","latestMatch","id","YearSelector","years","i","push","year","MatchPage","matches","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91a3db67.chunk.js","sourcesContent":["import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport \"./MatchDetailsCard.scss\"\n\nexport const MatchDetailsCard = ({teamName, match}) =>  {\n\n    if (!match) return null;\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`;\n    const isMatchWon = teamName === match.matchWinner;\n\n    return (\n        <div className={isMatchWon ? 'MatchDetailsCard won-card' : 'MatchDetailsCard lost-card'}>\n            <div>\n                <span className=\"vs\">vs</span>\n                <h1><Link to={otherTeamRoute}>{ otherTeam }</Link></h1>\n                <h2 className=\"match-date\">{match.date}</h2>\n                <h3 className=\"match-venue\">at {match.venue}</h3>\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\n            </div>\n            <div className=\"additional-details\">\n                <h3>First Innings</h3>\n                <p>{match.team1}</p>\n                <h3>Second Innings</h3>\n                <p>{match.team2}</p>\n                <h3>Player of the match</h3>\n                <p>{match.playerOfMatch}</p>\n                <h3>Umpires</h3>\n                <p>{match.umpire1}, {match.umpire2}</p>\n            </div>\n        </div>\n    );\n}\n","import { React } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./MatchSmallCard.scss\"\n\nexport const MatchSmallCard = ({teamName, match}) =>  {\n\n    if (!match) return null;\n\n    const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\n    const otherTeamRoute = `/teams/${otherTeam}`; \n    const isMatchWon = teamName === match.matchWinner;\n\n    return (\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\n            <span className=\"vs\">vs</span>\n            <h1><Link to={otherTeamRoute}>{ otherTeam }</Link></h1>\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\n        </div>\n    );\n}\n","import { React, useEffect, useState } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\nimport { useParams, Link } from 'react-router-dom';\nimport { MatchDetailsCard } from '../components/MatchDetailsCard';\nimport { MatchSmallCard } from '../components/MatchSmallCard';\n\nimport './TeamPage.scss';\n\n\nexport const TeamPage = () => {\n\n    const [team, setTeam] = useState({ latestMatches: [] });\n    const { teamName } = useParams();\n\n    useEffect(() => {\n        const fetchTeam = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\n            const data = await response.json();\n            setTeam(data);\n        };\n        fetchTeam();\n    }, [teamName]\n    );\n\n    if (!team || !team.teamName) {\n        return <h1>Team not found!</h1>\n    }\n\n    return (\n        <div className=\"TeamPage\">\n            <div className = \"team-name-section\">\n                <h1 className=\"team-name\">{team.teamName}</h1>\n            </div>\n            <div className = \"win-loss-section\">\n                Wins / Losses\n                <PieChart\n                    data={[\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\n                    ]}\n                    />\n            </div>\n            <div className=\"match-detail-section\">\n                <h3 className=\"latest-matches-heading\">Latest Matches</h3>\n                <MatchDetailsCard teamName = {team.teamName} match={team.latestMatches[0]} />\n            </div>\n            {team.latestMatches.slice(1).map(latestMatch => <MatchSmallCard key = {latestMatch.id} teamName = {team.teamName} match={latestMatch} />)}\n            <div className=\"more-link\">\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More {'>'}</Link>\n            </div>\n        </div>\n    );\n}\n","import { React } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './YearSelector.scss';\n\n\nexport const YearSelector = ({teamName}) =>  {\n\n    let years = []\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\n\n    for ( let i = startYear; i <= endYear; i++ ) {\n        years.push(i);\n    }\n\n    return (\n        <ol className=\"YearSelector\">\n            { years.map(year => (\n                <li key={year}>\n                    <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\n                </li>\n                )\n            ) } \n        </ol>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MatchDetailsCard } from '../components/MatchDetailsCard';\nimport { YearSelector } from '../components/YearSelector';\nimport './MatchPage.scss'\n\nexport const MatchPage = () => {\n\n    const [matches, setMatches] = useState([]);\n    const {teamName, year} = useParams();\n\n    useEffect(() => {\n        const fetchMatches = async () => {\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\n                const data = await response.json();\n                setMatches(data);\n            };\n            fetchMatches();\n        }, [teamName, year]\n    );\n\n    return (\n        <div className=\"MatchPage\">\n            <div className=\"year-selector\">\n                <h3> Select Year </h3>\n                <YearSelector teamName={teamName}/>\n            </div>\n            <div>\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\n                {matches.map(match => <MatchDetailsCard key={match.id} teamName = {teamName} match={match} />)}\n            </div>\n        </div>\n    );\n}\n","import { React } from 'react';\nimport { Link } from 'react-router-dom'\nimport './TeamTile.scss'\n\nexport const TeamTile = ({teamName}) =>  {\n\n    return (\n        <div className=\"TeamTile\">\n            <h1>\n                <Link to={`/teams/${teamName}`}>\n                     {teamName}\n                </Link>\n            </h1>\n        </div>\n    )\n}","import { React, useEffect, useState } from 'react';\nimport {TeamTile} from '../components/TeamTile'\n\nimport './HomePage.scss';\n\n\nexport const HomePage = () => {\n\n    const [teams, setTeams] = useState([]);\n\n    useEffect(() => {\n        const fetchAllTeams = async () => {\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team`);\n            const data = await response.json();\n            setTeams(data);\n        };\n        fetchAllTeams();\n    }, []\n);\n\n    return (\n        <div className=\"HomePage\">\n            <div className = \"header-section\">\n                <h1 className=\"app-name\">IPL Dashboard</h1>\n            </div>\n            <div className=\"team-grid\">\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName}/>)}\n            </div>\n        </div>\n    );\n}\n","import './App.scss';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}